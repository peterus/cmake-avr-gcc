CMAKE_MINIMUM_REQUIRED(VERSION 3.1)

SET(CMAKE_SYSTEM_NAME Generic)

# where is the target environment 
SET(CMAKE_FIND_ROOT_PATH /usr/lib/gcc/avr)

SET(CMAKE_C_COMPILER avr-gcc)
SET(CMAKE_CXX_COMPILER avr-g++)

# search for programs in the build host directories
SET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
# for libraries and headers in the target directories
SET(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
SET(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)

# dissabke rdynamic from linker flags
SET(CMAKE_SHARED_LIBRARY_LINK_C_FLAGS)

PROJECT(Test_Project)

SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
SET(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)

SET(CSTANDARD "-std=gnu99")
SET(CDEBUG "-g")
SET(CWARN "-Wall -Wstrict-prototypes")
SET(CTUNING "-fpack-struct -fshort-enums")
SET(COPT "-Os")
SET(CMCU "-mmcu=atmega2560")
SET(CDEFS "-DF_CPU=16000000L")


SET(CFLAGS "${CMCU} ${CDEBUG} ${CDEFS} ${CINCS} ${COPT} ${CWARN} ${CSTANDARD} ${CEXTRA}")
SET(CXXFLAGS "${CMCU} ${CDEFS} ${CINCS} ${COPT}")

SET(CMAKE_C_FLAGS  ${CFLAGS})
SET(CMAKE_CXX_FLAGS ${CXXFLAGS})

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/Driver)
ADD_SUBDIRECTORY(Driver)
ADD_SUBDIRECTORY(Projects)

